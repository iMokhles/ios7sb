/*
 *     Generated by class-dump 3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.
 */

#import "NSObject.h"

#import "SBBulletinWindowClient.h"
#import "SBNotificationCenterViewControllerDelegate.h"
#import "SBWidgetViewControllerHostDelegate.h"
#import "_UISettingsKeyObserver.h"

@class NSArray, SBApplication, SBChevronView, SBNotificationCenterSettings, SBNotificationCenterViewController, SBUnlockActionContext, SBWindow, UIView;

@interface SBNotificationCenterController : NSObject <SBBulletinWindowClient, SBNotificationCenterViewControllerDelegate, SBWidgetViewControllerHostDelegate, _UISettingsKeyObserver>
{
    SBNotificationCenterViewController *_viewController;
    UIView *_coveredContentSnapshot;
    SBApplication *_coveredApplication;
    SBChevronView *_borrowedGrabberView;
    id _borrowedGrabberWillPresentBlock;
    id _borrowedGrabberHideBlock;
    id _borrowedGrabberCompletionBlock;
    NSArray *_dataProviders;
    id _keyboardNotificationObserverToken;
    SBUnlockActionContext *_unlockActionContext;
    int _presentationState;
    SBNotificationCenterSettings *_settings;
    struct {
        unsigned int isPresentingOrDismissing:1;
        unsigned int isGrabberEnabled:1;
    } _notificationCenterControllerFlags;
}

+ (double)transitionAnimationDuration;
+ (id)newDynamicAnimationForShow:(BOOL)arg1 targetValue:(double)arg2 withInitialValue:(double)arg3 velocity:(double)arg4 extraPull:(BOOL)arg5;
+ (id)sharedInstanceIfExists;
+ (id)sharedInstance;
+ (id)_sharedInstanceCreateIfNecessary:(BOOL)arg1;
@property(readonly, nonatomic) SBNotificationCenterSettings *settings; // @synthesize settings=_settings;
@property(readonly, nonatomic) SBUnlockActionContext *unlockActionContext; // @synthesize unlockActionContext=_unlockActionContext;
@property(readonly, nonatomic) SBNotificationCenterViewController *viewController; // @synthesize viewController=_viewController;
- (void)finishedScrollTest;
- (void)runScrollTest:(id)arg1 iterations:(int)arg2 delta:(int)arg3;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (void)buddyCompleted:(id)arg1;
- (void)publishSectionInfoIfNecessary;
- (id)_widgetSections;
- (id)_sectionWithIdentifier:(id)arg1 forCategory:(int)arg2;
- (id)_sectionForWidgetBundle:(id)arg1 forCategory:(int)arg2;
- (id)_copyDefaultEnabledWidgetIDs;
- (void)widget:(id)arg1 requestsPresentationOfViewController:(id)arg2 presentationStyle:(int)arg3 context:(id)arg4 completion:(id)arg5;
- (void)widget:(id)arg1 requestsLaunchOfURL:(id)arg2;
- (void)bulletinWindowDidRotateFromOrientation:(int)arg1;
- (void)bulletinWindowIsAnimatingRotationToOrientation:(int)arg1 duration:(double)arg2;
- (void)bulletinWindowWillRotateToOrientation:(int)arg1 duration:(double)arg2;
- (void)invalidateUnlockActionContext;
- (BOOL)handleActionForBulletin:(id)arg1;
- (id)widgetViewControllerHostDelegate:(id)arg1;
- (BOOL)_handleActionOrRequestWithDefaultAction:(id)arg1 lockedAction:(void)arg2;
- (void)biometricEventMonitorDidAuthenticate:(id)arg1;
- (void)_updateForChangeInMessagePrivacy;
- (void)reloadAllWidgets;
@property(readonly, nonatomic, getter=isGrabberVisible) BOOL grabberVisible;
- (void)hideGrabberAnimated:(BOOL)arg1 completion:(id)arg2;
- (void)showGrabberAnimated:(BOOL)arg1;
- (BOOL)canShowHideGrabberView;
@property(nonatomic, getter=isGrabberEnabled) BOOL grabberEnabled;
- (void)_setGrabberEnabled:(BOOL)arg1;
- (void)unregisterSharedGrabberView;
- (void)registerSharedGrabberView:(id)arg1 withWillPresentBlock:(id)arg2 hideBlock:(void)arg3 andCompletion:(id)arg4;
- (void)dismissPresentedWidgetContentAnimated:(BOOL)arg1;
- (void)dismissAnimated:(BOOL)arg1 withStepper:(id)arg2 completion:(void)arg3 fromCurrentState:(id)arg4;
- (void)dismissAnimated:(BOOL)arg1 completion:(id)arg2;
- (void)dismissAnimated:(BOOL)arg1;
- (void)presentAnimated:(BOOL)arg1 completion:(id)arg2;
- (void)presentAnimated:(BOOL)arg1;
- (void)_present:(BOOL)arg1 withStandardAnimation:(BOOL)arg2 stepper:(id)arg3 completion:(void)arg4 fromCurrentState:(id)arg5;
- (void)_present:(BOOL)arg1 stepper:(id)arg2;
- (void)cancelTransition;
- (void)endTransitionWithVelocity:(struct CGPoint)arg1 completion:(id)arg2;
- (void)endTransitionWithVelocity:(struct CGPoint)arg1 additionalValueApplier:(id)arg2 completion:(void)arg3;
- (void)updateTransitionWithTouchLocation:(struct CGPoint)arg1 velocity:(struct CGPoint)arg2;
- (void)beginDismissalWithTouchLocation:(struct CGPoint)arg1;
- (void)beginPresentationWithTouchLocation:(struct CGPoint)arg1;
- (void)prepareLayoutForPresentationFromBanner;
- (void)_cleanupAfterTransition:(BOOL)arg1;
- (void)_setupForDismissalWithTouchLocation:(struct CGPoint)arg1;
- (void)_setupForPresentationWithTouchLocation:(struct CGPoint)arg1;
- (void)_setupForViewPresentation;
- (void)_removeCoveredContentSnapshot;
- (void)_insertCoveredContentSnapshotIfNecessary:(id)arg1;
- (void)_invalidateCoveredContentSnapshot;
- (void)_updateCoveredContentSnapshot;
- (BOOL)_shouldSelectViewControllerAtTouchLocation;
- (BOOL)doesSectionWithIdentifierUpdateMessagePrivacyViaSectionParameters:(id)arg1;
- (BOOL)handleMenuButtonTap;
@property(nonatomic) BOOL blursBackground;
@property(readonly, nonatomic, getter=isPresentingWidgetContent) BOOL presentingWidgetContent;
@property(readonly, nonatomic, getter=isNotificationsViewAvailableWhileLocked) BOOL notificationsViewAvailableWhileLocked;
@property(readonly, nonatomic, getter=isTodayViewAvailableWhileLocked) BOOL todayViewAvailableWhileLocked;
- (BOOL)_isNotificationCenterViewAvailableWhileLockedWithProfileBlock:(id)arg1 counterpartBlock:(void)arg2;
- (BOOL)_isNotificationCenterViewWithFeatureKeyAvailableWhileLocked:(id)arg1 isLockedDownByRestrictions:(char *)arg2;
@property(readonly, nonatomic, getter=isAvailableWhileLocked) BOOL availableWhileLocked;
@property(readonly, nonatomic, getter=isVisible) BOOL visible;
@property(readonly, nonatomic) SBWindow *window;
- (void)dealloc;
- (id)init;

@end

