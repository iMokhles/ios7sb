/*
 *     Generated by class-dump 3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.
 */

#import "NSObject.h"

#import "SBAssistantObserver.h"
#import "SBBulletinBusyClient.h"
#import "SBBulletinWindowClient.h"
#import "SBUIBannerTarget.h"
#import "UIGestureRecognizerDelegate.h"

@class NSHashTable, NSMutableArray, SBBannerContextView, UIImage;

@interface SBBannerController : NSObject <SBUIBannerTarget, SBAssistantObserver, SBBulletinWindowClient, SBBulletinBusyClient, UIGestureRecognizerDelegate>
{
    NSHashTable *_sources;
    NSMutableArray *_pendingBannerContextsNeedingRepop;
    UIImage *_bannerViewBackgroundImage;
    SBBannerContextView *_bannerView;
    BOOL _soundIsPlaying;
    BOOL _dismissalOverdue;
    BOOL _replaceDelayIsActive;
    BOOL _showingStickyDurationBanner;
    BOOL _suppressingBanners;
    BOOL _enableDelayActive;
    BOOL _assistantIsFullyVisible;
    BOOL _locked;
    int _activeDismissGestureType;
    int _overdueDismissReason;
    id _overdueCompletionBlock;
    BOOL _dismissingBannerForAssistantReveal;
    BOOL _dismissingBannerForAssistantDismiss;
    id _assistantRevealCompletionBlock;
    id _assistantDismissCompletionBlock;
}

+ (id)sharedInstanceIfExists;
+ (id)sharedInstance;
+ (id)_sharedInstanceCreateIfNecessary:(BOOL)arg1;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (struct CGRect)_bannerFrameForOrientation:(int)arg1;
- (void)_tearDownViewWithReason:(int)arg1;
- (void)_playSoundForContext:(id)arg1;
- (void)_performTransition:(int)arg1 withAnimation:(BOOL)arg2 context:(id)arg3 reason:(int)arg4 completion:(id)arg5;
- (id)_newBannerViewForContext:(id)arg1;
- (id)_bannerViewBackgroundImage;
- (double)_durationForTransition:(int)arg1;
- (void)_fireCompletionBlockForBannerAnimationForAssistantDismissIfNecessary;
- (void)_fireCompletionBlockForBannerAnimationForAssistantRevealIfNecessary;
- (void)_setOverdueCompletionBlock:(id)arg1;
- (void)_soundDidFinishPlayingForBannerContext:(id)arg1;
- (void)_dismissOverdueOrDequeueIfPossible;
- (void)_stopCurrentSound;
- (void)_replaceIntervalElapsed;
- (void)_dismissIntervalElapsed;
- (void)_tryToDismissWithAnimation:(BOOL)arg1 reason:(int)arg2 forceEvenIfBusy:(BOOL)arg3 completion:(id)arg4;
- (void)_handleBannerTapGesture:(id)arg1;
- (void)_handleBannerPanGesture:(id)arg1;
- (void)_handleDismissGestureType:(int)arg1 withState:(int)arg2 displacement:(float)arg3 velocity:(float)arg4;
- (void)_updateDismissGestureState:(struct SBBannerDismissGestureState *)arg1 withDisplacement:(float)arg2 velocity:(float)arg3;
- (void)_presentBannerForContext:(id)arg1 reason:(int)arg2;
- (BOOL)_shouldPendStickyBannerContext:(id)arg1 withReason:(int)arg2;
- (BOOL)_dequeueBannerIfPossibleIgnoringStickyBanner:(BOOL)arg1 existingDismissReason:(int)arg2;
- (BOOL)_dequeueBannerIfPossible;
- (BOOL)_canDequeueIgnoringStickyBanner:(BOOL)arg1;
- (id)_dequeueNextBannerContext;
- (BOOL)_isItemShowable:(id)arg1 fromSource:(id)arg2;
- (void)_dequeueAfterDelayIfPossible;
- (void)_updateBannerSuppressionStateAndDequeueIfPossible:(BOOL)arg1 withDelay:(BOOL)arg2;
- (void)_updateBannerSuppressionState;
- (void)_removePendingContextsForSourceNeedingRepop:(id)arg1;
- (id)_pendingBannerContextForSourceNeedingRepop:(id)arg1;
- (void)_dismissBannerWithAnimation:(BOOL)arg1 reason:(int)arg2 forceEvenIfBusy:(BOOL)arg3 completion:(id)arg4;
- (void)_lockStateChanged:(id)arg1;
- (void)assistant:(id)arg1 viewDidDisappear:(int)arg2;
- (void)assistant:(id)arg1 viewWillDisappear:(int)arg2;
- (void)assistant:(id)arg1 viewDidAppear:(int)arg2;
- (void)assistant:(id)arg1 viewWillAppear:(int)arg2;
- (void)bulletinWindowDidRotateFromOrientation:(int)arg1;
- (void)bulletinWindowIsAnimatingRotationToOrientation:(int)arg1 duration:(double)arg2;
- (void)bulletinWindowWillRotateToOrientation:(int)arg1 duration:(double)arg2;
- (void)bulletinWindowStoppedBeingBusy;
- (void)dismissCurrentBannerContextForSource:(id)arg1;
- (id)currentBannerContextForSource:(id)arg1;
- (void)signalSource:(id)arg1;
- (void)unregisterSource:(id)arg1;
- (void)registerSource:(id)arg1;
@property(readonly, nonatomic) int bannerTargetIdiom;
- (id)newBannerSnapshotViewRotatedForOrientation:(int)arg1;
- (void)setBannerAlpha:(float)arg1;
- (void)handleSystemDismissGestureWithState:(int)arg1 position:(struct CGPoint)arg2 velocity:(float)arg3;
- (BOOL)isTrackingDismissGesture;
- (void)dismissBannerWithAnimation:(BOOL)arg1 reason:(int)arg2 forceEvenIfBusy:(BOOL)arg3;
- (void)dismissBannerWithAnimation:(BOOL)arg1 reason:(int)arg2;
- (BOOL)isShowingBanner;
- (void)dealloc;
- (id)init;

@end

